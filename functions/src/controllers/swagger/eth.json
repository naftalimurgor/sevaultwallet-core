{
  "openapi": "3.0.0",
  "info": {
    "title": "Ethereum Wallet API",
    "version": "1.0.0",
    "description": "API for Ethereum wallet operations including balance retrieval, wallet creation, and transactions."
  },
  "paths": {
    "/wallet/balance/get": {
      "post": {
        "summary": "Get Ethereum Balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privateKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Balance retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "number"
                        },
                        "usd": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/balance/usdt/get": {
      "post": {
        "summary": "Get USDT Balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Balance retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "object",
                      "properties": {
                        "usd": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/balance/wbgl/get": {
      "post": {
        "summary": "Get WBGL balance on Ethereum",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Ethereum address of the user"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "WBGL balance successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "number",
                          "description": "WBGL balance in native token units"
                        },
                        "usd": {
                          "type": "number",
                          "description": "WBGL balance equivalent in USD"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "null"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/create": {
      "post": {
        "summary": "Create HD Wallet",
        "responses": {
          "200": {
            "description": "Wallet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/import": {
      "post": {
        "summary": "Import Wallet from Private Key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privateKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/eth/create": {
      "post": {
        "summary": "Send Ethereum",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privateKey": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/usdt/create": {
      "post": {
        "summary": "Send USDT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privateKey": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "fee": {
                      "type": "number"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/wbgl/create": {
      "post": {
        "summary": "Send WBGL on Ethereum",
        "operationId": "sendWBGLETHHandler",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "to",
                  "privateKey"
                ],
                "properties": {
                  "amount": {
                    "type": "string",
                    "description": "Amount of WBGL to send in ETH units"
                  },
                  "to": {
                    "type": "string",
                    "format": "ethereum-address",
                    "description": "Recipient Ethereum address"
                  },
                  "privateKey": {
                    "type": "string",
                    "description": "Sender's private key"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "fee": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Transaction failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/history/usdt/get": {
      "post": {
        "summary": "Get USDT ERC20 transactions for a given address",
        "description": "Fetches all ERC20 token transactions related to the provided address from Etherscan.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Ethereum address to fetch transactions for."
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tx": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tx_id": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string"
                          },
                          "confirmations": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "fee": {
                            "type": "string"
                          },
                          "to": {
                            "type": "string"
                          },
                          "from": {
                            "type": "string"
                          },
                          "block_height": {
                            "type": "integer"
                          },
                          "coinbase": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/history/wbgl/get": {
      "post": {
        "summary": "Get WBGL ERC-20 Transactions",
        "description": "Fetches the transaction history of WBGL ERC-20 tokens for a specified address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Ethereum address of the user",
                    "example": "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with WBGL transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tx": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tx_id": {
                            "type": "string",
                            "description": "Transaction hash"
                          },
                          "timestamp": {
                            "type": "string",
                            "description": "Timestamp of the transaction"
                          },
                          "confirmations": {
                            "type": "integer",
                            "description": "Number of confirmations"
                          },
                          "amount": {
                            "type": "number",
                            "description": "Transaction amount in WBGL"
                          },
                          "fee": {
                            "type": "string",
                            "description": "Transaction fee in ETH"
                          },
                          "to": {
                            "type": "string",
                            "description": "Recipient address"
                          },
                          "from": {
                            "type": "string",
                            "description": "Sender address"
                          },
                          "block_height": {
                            "type": "integer",
                            "description": "Block number of the transaction"
                          },
                          "coinbase": {
                            "type": "boolean",
                            "description": "Indicates if the transaction is a coinbase transaction"
                          },
                          "id": {
                            "type": "integer",
                            "description": "Transaction index"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message from Etherscan"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicates whether the API call was successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/history/eth/get": {
      "post": {
        "summary": "Get Ethereum transactions",
        "description": "Retrieves a list of Ethereum transactions for a given address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Ethereum wallet address"
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tx": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tx_id": {
                            "type": "string",
                            "description": "Transaction hash"
                          },
                          "timestamp": {
                            "type": "string",
                            "description": "Transaction timestamp"
                          },
                          "confirmations": {
                            "type": "integer",
                            "description": "Number of confirmations"
                          },
                          "amount": {
                            "type": "string",
                            "description": "Transaction amount in ETH"
                          },
                          "fee": {
                            "type": "string",
                            "description": "Transaction fee in ETH"
                          },
                          "to": {
                            "type": "string",
                            "description": "Recipient address"
                          },
                          "from": {
                            "type": "string",
                            "description": "Sender address"
                          },
                          "block_height": {
                            "type": "integer",
                            "description": "Block number"
                          },
                          "coinbase": {
                            "type": "boolean",
                            "description": "Whether the transaction is a coinbase transaction"
                          },
                          "id": {
                            "type": "integer",
                            "description": "Transaction index"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "API response message"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}